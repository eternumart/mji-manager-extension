import styles from "../../../../styles/components/ActivationForm.module.scss";
import { useEffect, useState } from "react";
import { useAppContext } from "../../../../context/Context";
import { apiConfig } from "../../../../apiConfig";

export const ActivateForm = () => {
	const { setLoading, setActiveTab, activated, setActivated, serverState } = useAppContext();
	const [errorMessage, setErrorMessage] = useState("");
	const [login, setLogin] = useState(""); // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º `useState` –≤–º–µ—Å—Ç–æ `useRef`

	const prodUrl = `${apiConfig.address.protocol}${apiConfig.address.ip}`;
	const baseUrl = serverState === "prod" ? prodUrl : `${prodUrl}:${apiConfig.address.devPort}`;

	const activateAccount = async (e: React.FormEvent<HTMLFormElement>) => {
		e.preventDefault();
		setErrorMessage(""); // ‚úÖ –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≤—ã–º –∑–∞–ø—Ä–æ—Å–æ–º

		const loginInput = document.querySelector("#login-activate") as HTMLInputElement;
		const passwordInput = document.querySelector("#password-activate") as HTMLInputElement;
		const keyInput = document.querySelector("#key-activate") as HTMLInputElement;

		if (!loginInput || !passwordInput || !keyInput) {
			console.error("‚ùå –ü–æ–ª—è –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!");
			setErrorMessage("–û—à–∏–±–∫–∞: –ø–æ–ª—è –≤–≤–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.");
			return;
		}

		const loginValue = loginInput.value;
		const password = passwordInput.value;
		const key = keyInput.value;

		if (!loginValue || !password || !key) {
			console.error("‚ùå –í—Å–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã!");
			setErrorMessage("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω, –ø–∞—Ä–æ–ª—å –∏ –∫–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏.");
			return;
		}

		setLogin(loginValue); // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–æ–≥–∏–Ω –≤ `useState`

		console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏...");
		setLoading(true);

		chrome.runtime.sendMessage({
			contentScriptQuery: "activate-request",
			data: { login: loginValue, password, key },
			url: `${baseUrl}${apiConfig.routes.api.activation}`,
		});

		console.log("üì® activate-request –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä, –æ–∂–∏–¥–∞–µ–º activate-response...");
	};

	useEffect(() => {
		const handleActivateResponse = (message: any) => {
			if (message.contentScriptQuery !== "activate-response") return;

			console.log("üîπ –ü–æ–ª—É—á–µ–Ω activate-response:", message.data);

			const isActivated = message.data.activated;
			if (!isActivated) {
				console.error("‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏");
				setErrorMessage("–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á.");
				setLoading(false);
				return;
			}

			console.log("‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:", login);
			console.log("–ú–µ–Ω—è–µ–º —Å—Ç–µ–π—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è");

			setActivated(true);
			setLoading(false); // ‚úÖ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É

			// ‚úÖ –ß–µ—Ä–µ–∑ 4 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É –≤—Ö–æ–¥–∞
			setTimeout(() => {
				setActiveTab("login");
			}, 4000);
		};

		chrome.runtime.onMessage.addListener(handleActivateResponse);
		return () => chrome.runtime.onMessage.removeListener(handleActivateResponse);
	}, []); // ‚úÖ –í—ã–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

	return (
		<>
			{!activated && (
				<form className={`${styles.authForm} ${styles.authFormActive}`} id="activate-form" action="submit" onSubmit={activateAccount}>
					<fieldset className={styles.authInputWrapper}>
						<input type="email" className={styles.authInput} placeholder="–õ–æ–≥–∏–Ω" id="login-activate" required />
						<span className={`${styles.authError} ${errorMessage ? styles.authErrorVisible : ""}`} id="error-login"></span>
					</fieldset>
					<fieldset className={styles.authInputWrapper}>
						<input type="password" className={styles.authInput} placeholder="–ü–∞—Ä–æ–ª—å" id="password-activate" required />
						<span className={`${styles.authError} ${errorMessage ? styles.authErrorVisible : ""}`} id="error-password"></span>
					</fieldset>
					<fieldset className={styles.authInputWrapper}>
						<input type="text" className={styles.authInput} placeholder="–ö–ª—é—á –∞–∫—Ç–∏–≤–∞—Ü–∏–∏" id="key-activate" required />
						<span className={`${styles.authError} ${errorMessage ? styles.authErrorVisible : ""}`}>{errorMessage}</span>
					</fieldset>
					<input className={styles.authButton} id="activate-btn" value="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" type="submit" />
				</form>
			)}
			{activated && <p className={styles.authSuccess}>–ê–∫–∫–∞—É–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</p>}
		</>
	);
};
