import styles from "../../../styles/components/Logged.module.scss";
import React, { useEffect } from "react";
import { useAppContext } from "../../../context/Context";
import { logOut } from "../utils/logOut";
import { apiConfig } from "../../../apiConfig";
import { getAppData } from "../utils/launchApp";

export const Logged = () => {
	const { userData, isLogged, setIsLogged, setUserData, serverState, setLoading } = useAppContext();

	const prodUrl = `${apiConfig.address.protocol}${apiConfig.address.ip}`;
	const baseUrl = serverState === "prod" ? prodUrl : `${prodUrl}:${apiConfig.address.devPort}`;

	useEffect(() => {
		console.log("‚öôÔ∏è –ö–æ–º–ø–æ–Ω–µ–Ω—Ç <Logged /> –∑–∞–≥—Ä—É–∂–µ–Ω");

		setTimeout(() => {
			chrome.storage.local.get(baseUrl, (result) => {
				console.log("üìÇ –í—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ storage –ø–æ baseUrl:", result);

				if (isLogged) return;

				if (result[baseUrl].currentFio && result[baseUrl].currentLogin) {
					console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω –≤ storage, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.");
					setIsLogged(true);
					setUserData({ fio: result[baseUrl].currentFio, login: result[baseUrl].currentLogin });
					getAppData(result[baseUrl], setLoading);
				} else {
					console.warn("‚ö†Ô∏è –í local storage –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ `baseUrl`.");
				}
			});
		}, 300);
	}, [userData]);

	// –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è
	const handleLogout = async () => {
		await logOut();
		setUserData(null);
		setIsLogged(false);
	};

	return (
		<>
			<div className={styles.logged} style={{ display: isLogged ? "flex" : "none" }}>
				<div className={styles.loggedTop}>
					<p className={styles.loggedUser}>{userData?.fio}</p>
					<button className={styles.loggedLogin}>{userData?.login}</button>
				</div>
				<div className={styles.loggedBottom}>
					<button className={styles.loggedButton} onClick={handleLogout}>
						–í—ã–π—Ç–∏
					</button>
				</div>
			</div>
			<div className={`${styles.account} ${styles.accountHidden}`}>
				<input className={styles.accountFio} value={userData?.fio} />
			</div>
		</>
	);
};
